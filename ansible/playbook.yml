---
- name: Provision and deploy personal website
  hosts: webserver
  become: true

  vars_files:
    - vars.yml

  tasks:

  - name: Install packages
    yum:
      name:
        - nginx
        - git
        - docker
        - python3
        - python3-pip
        - cronie
        - fail2ban
      state: present

  - name: Install certbot with pip
    pip:
      name: certbot
      executable: pip3

  - name: Install dns plugin for route53
    pip:
      name: certbot-dns-route53
      executable: pip3

  - name: Start and enable nginx
    service:
      name: nginx
      state: started
      enabled: true

  - name: Start and enable docker
    service:
      name: docker
      state: started
      enabled: true

  - name: Start and enable cronie
    service:
      name: crond
      state: started
      enabled: true

  - name: Start and enable fail2ban
    service:
      name: fail2ban
      state: started
      enabled: true

  - name: Add ec2-user to docker group
    user:
      name: ec2-user
      groups: docker
      append: yes

  - name: Clone repository
    become: false
    git:
      repo: 'https://github.com/onurhanak/personalWebsite'
      dest: /home/ec2-user/onurhanak.com
      version: main
      force: yes

  - name: Build Docker image
    become: true
    command: docker build --no-cache -t onurhanak.com .
    args:
      chdir: /home/ec2-user/onurhanak.com

  - name: Generate site
    become: true
    command: docker run --rm -v /home/ec2-user/onurhanak.com/public:/site/public onurhanak.com
    args:
      chdir: /home/ec2-user/onurhanak.com

  - name: Create web root directory
    file:
      path: /var/www/onurhanak.com
      state: directory
      owner: nginx
      group: nginx
      mode: '0755'

  - name: Copy public site content
    copy:
      src: /home/ec2-user/onurhanak.com/public/
      dest: /var/www/onurhanak.com/
      remote_src: yes

  - name: Fix permissions after copy
    file:
      path: /var/www/onurhanak.com
      owner: nginx
      group: nginx
      mode: '0755'
      recurse: yes

  - name: Copy nginx config
    copy:
      src: ./nginx/default.conf
      dest: /etc/nginx/conf.d/default.conf
      owner: root
      group: root
      mode: '0644'
    notify: restart nginx

  - name: Get SSL cert 
    command: >
      certbot certonly
      --dns-route53
      -d {{ domain }}
      --non-interactive
      --agree-tos
      --email {{ email }}
    args:
      creates: "/etc/letsencrypt/live/{{ domain }}/fullchain.pem"

  - name: Fix permissions for letsencrypt
    file:
      path: /etc/letsencrypt
      mode: '0750'
      owner: root
      group: nginx
      recurse: yes

  - name: Setup auto-renewal 
    cron:
      name: "Certbot Renew"
      job: "/usr/local/bin/certbot renew --quiet && systemctl reload nginx"
      minute: "0"
      hour: "4"

  - name: Restart nginx
    service:
      name: nginx
      state: restarted
